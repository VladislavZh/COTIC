# @package _global_

# example hyperparameter optimization of some experiment with Optuna:
# python train.py -m hparams_search=mnist_optuna experiment=example

defaults:
  - override /hydra/sweeper: optuna

# choose metric which will be optimized by Optuna
# make sure this is the correct name of some metric logged in lightning module!
optimized_metric: "val/best_log_likelihood"

# here we define Optuna hyperparameter search
# it optimizes for value returned from function with @hydra.main decorator
# docs: https://hydra.cc/docs/next/plugins/optuna_sweeper
hydra:
  sweeper:
    _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper

    # storage URL to persist optimization results
    # for example, you can use SQLite if you set 'sqlite:///example.db'
    storage: null

    # name of the study to persist optimization results
    study_name: null

    # number of parallel workers
    n_jobs: 1

    # 'minimize' or 'maximize' the objective
    direction: maximize

    # total number of runs that will be executed
    n_trials: 500

    # choose Optuna hyperparameter sampler
    # docs: https://optuna.readthedocs.io/en/stable/reference/samplers.html
    sampler:
      _target_: optuna.samplers.TPESampler
      seed: 12345
      n_startup_trials: 50 # number of random sampling runs before optimization starts

    # define range of hyperparameters
    search_space:
      model.optimizer.lr:
        type: float
        low: 0.00001
        high: 0.003
      model.optimizer.weight_decay:
        type: float
        low: 0.0
        high: 0.01
      trainer.accumulate_grad_batches:
        type: int
        low: 1
        high: 20
      trainer.gradient_clip_val:
        type: float
        low: 0.001
        high: 2
      model.net.in_channels:
        type: int
        low: 16
        high: 512
      model.net.kernel_size:
        type: categorical
        choices:
          - 3
          - 5
          - 7
          - 9
      model.net.nb_filters:
        type: int
        low: 16
        high: 512
      model.net.nb_layers:
        type: int
        low: 1
        high: 13
      model.net.dropout:
        type: float
        low: 0.0
        high: 0.5
      model.net.dilation_factor:
        type: float
        low: 1.0
        high: 2.0
      datamodule.batch_size_train:
        type: int
        low: 1
        high: 64
      model.joined_head.uniform_sample_size:
        type: int
        low: 1
        high: 50
